name: Bump Version

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  #######################################################################
  #                          BUMP VERSION                               #
  #######################################################################
  detectchanges:
    name: "Detect Changes"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Interrogate
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GH_TOKEN}}
          retries: 5
          script: |
            const {execSync} = require('child_process');
            const {writeFileSync} = require('fs');
            const {join: joinPath} = require('path');
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            let nodePaths = new Set();
            try {
              const latestRelease = await github.rest.repos.getLatestRelease({
                owner,
                repo
              });
              console.log(`latest release: ${JSON.stringify(latestRelease.data)}`);
              execSync('git pull --tags');
              execSync(`git reset --hard ${latestRelease.data.tag_name}`);
              const status = execSync(`git diff --name-only origin/master`, { encoding: 'utf-8'});
              console.log(status);
              const changes = status.split('\n');

              for (const change of changes) {
                if (change.startsWith('packages/')) {
                    const library = change.split('/')[1];
                    nodePaths.add(library);
                };
              }
            } catch (e) {
              console.log('Could not determine last release.');
              const packages = execSync(`find ./packages -type d -mindepth 1`, { encoding: 'utf-8'})
              console.log(packages);
              const changes = packages.split('\n');

              for (const change of changes) {
                if (change.startsWith('./packages/')) {
                    const library = change.split('/')[2];
                    nodePaths.add(library);
                };
              }
            }
            nodePaths = Array.from(nodePaths);
            console.log(nodePaths);

            const releasePleaseConfig = {
              ["release-type"]: "node",
              packages: {
                ".": {
                  // overrides release-type for node
                  ["release-type"]: "node",
                  ["package-name"]: "@itmcdev/vscode-extensions",
                  ["changelog-path"]: "CHANGELOG.md",
                },
              },
            };
            nodePaths.forEach(item => {
              releasePleaseConfig.packages = {
                ...releasePleaseConfig.packages,
                [`packages/${item}`]: {
                  ["release-type"]: "node",
                  ["package-name"]: `@itmcdev/${item}-extension-pack`,
                  ["changelog-path"]: "CHANGELOG.md",
                },
              };
            })
            console.log(releasePleaseConfig)
            writeFileSync('release-please-config.json', JSON.stringify(releasePleaseConfig, null, 2));
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-please-config
          path: release-please-config.json
  release:
    if: |
      (
        github.event_name != 'pull_request'
        || (github.event.pull_request && startsWith(github.event.pull_request.title, 'chore: release') != false)
      )
    name: "Release Tag"
    needs: [detectchanges]
    outputs:
      version: ${{ steps.new_releases.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - name: Archive production artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-please-config
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - name: Install Dependencies
        run: |
          npm i
          sudo apt-get install jq -y
          cat release-please-config.json | jq -r .
      - name: Create/Update Release PR
        run: |
          npm run release -- manifest-pr \
            --token=${{ secrets.GH_TOKEN }} \
            --repo-url=${{ github.repository }} \
            --target-branch=main \
            --config-file=release-please-config.json \
            --manifest-file=.release-please-manifest.json
      - name: Create Github Release
        id: new_releases
        run: |
          npm run release -- github-release \
            --token=${{ secrets.GH_TOKEN }} \
            --repo-url=${{ github.repository }} \
            --target-branch=main \
            --release-type=node \
            --include-v-in-tags=false

          version=$(cat .release-please-manifest.json| jq -r '.["."]')

          echo version=$version
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Debug
        run: |
          cat .release-please-manifest.json| jq -r '.["."]'
          cat .release-please-manifest.json | jq -r .

  #######################################################################
  #                       PUBLISH EXTENSIONS                            #
  #######################################################################
  publish:
    if: github.event_name != 'pull_request' && needs.release.outputs.version
    name: "Publish Template"
    needs: [release]
    uses: itmcdev/vscode-extensions/.github/workflows/publish.yml@main
    secrets: inherit
